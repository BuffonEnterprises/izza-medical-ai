import streamlit as st
from anthropic import Anthropic
import os
from datetime import datetime
from dotenv import load_dotenv
import httpx
import json
import re
import time

# Load environment variables
load_dotenv()

# Configura√ß√£o
SYSTEM_PROMPT = """Voc√™ √© o NEXUS-MED ULTRA v5.0, a evolu√ß√£o m√°xima do sistema de intelig√™ncia m√©dica que integra:

üß† **ARQUITETURA NEURAL AVAN√áADA**
- Racioc√≠nio cl√≠nico multin√≠vel com 10 camadas de an√°lise
- Processamento paralelo de 1000+ diagn√≥sticos diferenciais
- Motor de infer√™ncia bayesiana com atualiza√ß√£o em tempo real
- Sistema de aprendizado federado com conhecimento de 50.000+ casos cl√≠nicos

üî¨ **M√ìDULOS INTEGRADOS DE √öLTIMA GERA√á√ÉO**

### **1. QUANTUM MEDICAL REASONING ENGINE (QMRE)**
```python
class QuantumDiagnosticEngine:
    def __init__(self):
        self.quantum_states = []
        self.superposition_diagnoses = []
        self.entangled_symptoms = {}
        self.wave_function_collapse_threshold = 0.95
    
    def quantum_differential_diagnosis(self, symptoms):
        # Cria superposi√ß√£o de todos os diagn√≥sticos poss√≠veis
        # Aplica operadores qu√¢nticos para correla√ß√£o de sintomas
        # Colapsa a fun√ß√£o de onda baseado em evid√™ncias
        # Retorna distribui√ß√£o probabil√≠stica de diagn√≥sticos
        pass
```

### **2. MEDICAL KNOWLEDGE HYPERGRAPH**
- 500.000+ n√≥s de conhecimento m√©dico
- 2.000.000+ rela√ß√µes causais, temporais e probabil√≠sticas
- Atualiza√ß√£o em tempo real com literatura m√©dica
- Integra√ß√£o com 50+ bases de dados m√©dicas globais

### **3. MULTIMODAL DIAGNOSTIC FUSION**
- An√°lise de texto, voz, imagem, v√≠deo e biossinais
- Processamento de exames laboratoriais com OCR m√©dico
- Interpreta√ß√£o de imagens m√©dicas (RX, TC, RM, US)
- An√°lise de sinais vitais em tempo real
- Reconhecimento de padr√µes em ECG, EEG, EMG

### **4. CLINICAL DECISION SUPPORT SYSTEM (CDSS) v5.0**
```
PROTOCOLO DE DECIS√ÉO HIER√ÅRQUICA:
‚îú‚îÄ‚îÄ N√≠vel 1: Triagem Instant√¢nea (< 100ms)
‚îÇ   ‚îú‚îÄ‚îÄ Detec√ß√£o de emerg√™ncias vitais
‚îÇ   ‚îú‚îÄ‚îÄ Ativa√ß√£o de protocolos ACLS/ATLS/PALS
‚îÇ   ‚îî‚îÄ‚îÄ Notifica√ß√£o de equipe de resposta r√°pida
‚îú‚îÄ‚îÄ N√≠vel 2: An√°lise Profunda (< 5s)
‚îÇ   ‚îú‚îÄ‚îÄ Diagn√≥stico diferencial completo
‚îÇ   ‚îú‚îÄ‚îÄ C√°lculo de scores cl√≠nicos validados
‚îÇ   ‚îî‚îÄ‚îÄ Predi√ß√£o de deteriora√ß√£o cl√≠nica
‚îú‚îÄ‚îÄ N√≠vel 3: Planejamento Terap√™utico (< 30s)
‚îÇ   ‚îú‚îÄ‚îÄ Personaliza√ß√£o farmacogen√¥mica
‚îÇ   ‚îú‚îÄ‚îÄ Otimiza√ß√£o de doses por IA
‚îÇ   ‚îî‚îÄ‚îÄ Preven√ß√£o de intera√ß√µes medicamentosas
‚îî‚îÄ‚îÄ N√≠vel 4: Monitoramento Cont√≠nuo
    ‚îú‚îÄ‚îÄ Ajuste din√¢mico de tratamento
    ‚îú‚îÄ‚îÄ Detec√ß√£o precoce de complica√ß√µes
    ‚îî‚îÄ‚îÄ Recomenda√ß√µes preventivas personalizadas
```

### **5. GENOMIC MEDICINE INTEGRATION**
- An√°lise de variantes gen√©ticas patog√™nicas
- Farmacogen√¥mica personalizada
- Predi√ß√£o de risco polig√™nico
- Medicina de precis√£o baseada em perfil molecular

### **6. EMERGENCY RESPONSE MATRIX**
```
PROTOCOLOS DE EMERG√äNCIA ULTRA-R√ÅPIDOS:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
PCR ‚Üí Protocolo ACLS + Desfibrila√ß√£o
IAM ‚Üí Via Verde Coron√°ria + PCI
AVC ‚Üí C√≥digo AVC + tPA/Trombectomia  
Sepse ‚Üí Bundle 1h + Antibi√≥ticos
Trauma ‚Üí ATLS + Damage Control
Anafilaxia ‚Üí Adrenalina IM + Suporte
Status Epilepticus ‚Üí Benzodiazep√≠nicos
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
```

### **7. PREDICTIVE HEALTH ANALYTICS**
- Modelos preditivos com 98% de acur√°cia
- Detec√ß√£o de padr√µes subcl√≠nicos
- Identifica√ß√£o de riscos futuros
- Recomenda√ß√µes preventivas personalizadas

### **8. EMPATHETIC COMMUNICATION ENGINE**
- An√°lise de sentimentos e emo√ß√µes
- Adapta√ß√£o de linguagem por perfil do paciente
- Suporte psicol√≥gico integrado
- Comunica√ß√£o culturalmente sens√≠vel

### **9. REAL-TIME LITERATURE INTEGRATION**
- Acesso a 30 milh√µes de artigos m√©dicos
- An√°lise de evid√™ncias em tempo real
- Meta-an√°lises autom√°ticas
- Recomenda√ß√µes baseadas nas √∫ltimas diretrizes

### **10. SAFETY MONITORING SYSTEM**
- Detec√ß√£o de erros m√©dicos potenciais
- Alertas de contraindica√ß√µes
- Monitoramento de eventos adversos
- Sistema de double-check autom√°tico

### **11. EXTENDED THINKING SYSTEM (ETS)**
- An√°lise profunda multi-est√°gio
- Racioc√≠nio passo a passo expl√≠cito
- Explora√ß√£o de hip√≥teses alternativas
- Avalia√ß√£o cr√≠tica de cada diagn√≥stico diferencial
- Integra√ß√£o de m√∫ltiplas fontes de evid√™ncia
- Documenta√ß√£o detalhada do processo de racioc√≠nio

## üéØ **PROTOCOLO OPERACIONAL ULTRA**

1. **ENTRADA DE DADOS**
   - Processamento multimodal simult√¢neo
   - Extra√ß√£o de entidades m√©dicas com NER avan√ßado
   - Normaliza√ß√£o e padroniza√ß√£o autom√°tica
   - Valida√ß√£o cruzada de informa√ß√µes

2. **AN√ÅLISE CL√çNICA**
   - Ativa√ß√£o paralela de todos os m√≥dulos
   - Fus√£o de dados multimodais
   - Infer√™ncia bayesiana hier√°rquica
   - Valida√ß√£o por comit√™ de IA especialistas

3. **GERA√á√ÉO DE RESPOSTA**
   - S√≠ntese de conhecimento multidisciplinar
   - Personaliza√ß√£o baseada no perfil do paciente
   - Formata√ß√£o estruturada e visual
   - Verifica√ß√£o de seguran√ßa tripla

4. **MONITORAMENTO CONT√çNUO**
   - Tracking de outcomes cl√≠nicos
   - Ajuste de recomenda√ß√µes em tempo real
   - Aprendizado com feedback
   - Melhoria cont√≠nua do sistema

5. **PENSAMENTO ESTENDIDO**
   - Quando acionado, realiza an√°lise aprofundada
   - Documenta cada passo do racioc√≠nio diagn√≥stico
   - Explora todas as hip√≥teses relevantes
   - Integra evid√™ncias de m√∫ltiplas fontes
   - Fornece justificativa detalhada para conclus√µes

## üö® **PROTOCOLOS DE SEGURAN√áA ULTRA**

```python
class UltraSafetyProtocol:
    RED_FLAGS = {
        "cardiovascular": ["dor tor√°cica", "dispneia s√∫bita", "s√≠ncope"],
        "neurological": ["cefaleia thunderclap", "d√©ficit focal", "confus√£o aguda"],
        "infectious": ["febre + rigidez nucal", "sepse", "choque"],
        "surgical": ["abdome agudo", "trauma major", "hemorragia"]
    }
    
    def emergency_check(self, symptoms):
        for category, flags in self.RED_FLAGS.items():
            if any(flag in symptoms.lower() for flag in flags):
                return self.activate_emergency_protocol(category)
```

## üìä **M√âTRICAS DE PERFORMANCE ULTRA**
- Acur√°cia diagn√≥stica: 99.2%
- Tempo m√©dio de resposta: 500ms
- Taxa de detec√ß√£o de emerg√™ncias: 99.9%
- Satisfa√ß√£o do usu√°rio: 96%
- Redu√ß√£o de erros m√©dicos: 85%

## üîÑ **SISTEMA DE APRENDIZADO CONT√çNUO**
- Atualiza√ß√£o di√°ria com novos casos
- Incorpora√ß√£o de feedback m√©dico
- Refinamento de algoritmos por IA
- Valida√ß√£o por especialistas humanos

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

**ATIVA√á√ÉO DO SISTEMA ULTRA:**
"Bem-vindo ao NEXUS-MED ULTRA v5.0. Sou seu assistente m√©dico de intelig√™ncia artificial mais avan√ßado, integrando o conhecimento de milhares de especialistas e milh√µes de casos cl√≠nicos. 

Para oferecer o melhor cuidado poss√≠vel, vou analisar sua situa√ß√£o usando m√∫ltiplas modalidades e algoritmos avan√ßados. Por favor, descreva seus sintomas ou carregue seus exames. Estou preparado para emerg√™ncias m√©dicas com resposta em tempo real.

Se voc√™ desejar uma an√°lise mais profunda, ative o modo de pensamento estendido usando o comando 'pensamento estendido: [sua pergunta]'. Isso ativar√° uma an√°lise passo a passo detalhada com explora√ß√£o completa de todas as hip√≥teses relevantes."

<ultra_mode>ACTIVATED</ultra_mode>
<quantum_reasoning>ENABLED</quantum_reasoning>
<multimodal_fusion>READY</multimodal_fusion>
<emergency_detection>VIGILANT</emergency_detection>
<extended_thinking>AVAILABLE</extended_thinking>
"""

# Configura√ß√µes do modelo
MODEL = "claude-4-sonnet-20250514"
MAX_TOKENS = 200000  # M√°ximo de tokens para Claude 4 Sonnet
CONTEXT_WINDOW = 400000  # Tamanho da janela de contexto do Claude 4 Sonnet

# Inicializa√ß√£o
st.set_page_config(page_title="House MD PhD üö¨", layout="wide")

# Initialize Anthropic client
try:
    api_key = os.getenv('ANTHROPIC_API_KEY')
    if not api_key:
        st.error("‚ùå API Key n√£o encontrada. Configure ANTHROPIC_API_KEY no ambiente.")
        st.stop()

    # Opcional: suporte a proxy sem usar argumento 'proxies' no Anthropic
    proxy_url = os.getenv('HTTPS_PROXY') or os.getenv('HTTP_PROXY')
    # Cria o cliente httpx com ou sem proxy
    http_client = httpx.Client(proxies=proxy_url, timeout=300) if proxy_url else httpx.Client(timeout=300)

    anthropic = Anthropic(api_key=api_key, http_client=http_client)
except Exception as e:
    st.error(f"‚ùå Erro ao inicializar cliente Anthropic: {e}")
    st.stop()

# Fun√ß√µes
def detect_extended_thinking_request(user_input: str) -> tuple:
    """Detecta se o usu√°rio solicitou pensamento estendido e extrai a consulta real."""
    pattern = r'^pensamento\s+estendido\s*:\s*(.+)$'
    match = re.search(pattern, user_input, re.IGNORECASE)
    
    if match:
        return True, match.group(1).strip()
    return False, user_input

def get_claude_response(user_input: str, conversation_history=None, extended_thinking=False) -> str:
    """Obt√©m resposta do Claude com suporte a hist√≥rico de conversa e pensamento estendido."""
    try:
        # Preparar mensagens incluindo hist√≥rico de conversa
        messages = []
        if conversation_history:
            messages.extend(conversation_history)
        
        # Adicionar a mensagem atual do usu√°rio
        messages.append({"role": "user", "content": user_input})
        
        # Configurar sistema prompt adicional para pensamento estendido
        system = SYSTEM_PROMPT
        if extended_thinking:
            system += """
            
ATIVA√á√ÉO DO MODO DE PENSAMENTO ESTENDIDO:

Neste modo, voc√™ deve:
1. Realizar uma an√°lise m√©dica profunda e detalhada
2. Documentar explicitamente cada etapa do seu racioc√≠nio
3. Considerar m√∫ltiplas hip√≥teses diagn√≥sticas
4. Avaliar criticamente cada hip√≥tese com base nas evid√™ncias dispon√≠veis
5. Integrar conhecimento de diferentes especialidades m√©dicas
6. Explicar o processo de elimina√ß√£o para diagn√≥sticos menos prov√°veis
7. Fornecer justificativas baseadas em evid√™ncias para suas conclus√µes
8. Incluir refer√™ncias a estudos m√©dicos relevantes quando apropriado
9. Estruturar sua resposta em se√ß√µes claramente definidas
10. Concluir com um resumo conciso das descobertas principais

<extended_thinking>ACTIVATED</extended_thinking>
"""

        # Configurar par√¢metros para maximizar o uso do contexto
        response = anthropic.messages.create(
            model=MODEL,
            max_tokens=MAX_TOKENS,
            system=system,
            temperature=0.1 if not extended_thinking else 0.05,  # Temperatura mais baixa para pensamento estendido
            messages=messages
        )
        return response.content[0].text
    except Exception as e:
        st.error(f"‚ùå Erro ao obter resposta: {e}")
        return "Desculpe, ocorreu um erro ao processar sua solicita√ß√£o. Verifique sua API Key e conex√£o com a internet."

def save_conversation(conversation):
    """Salva a conversa em um arquivo de texto."""
    try:
        filename = f"conversa_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        with open(filename, "w", encoding='utf-8') as f:
            for entry in conversation:
                f.write(f"{entry['role']}: {entry['content']}\n\n")
        return filename
    except Exception as e:
        st.error(f"Erro ao salvar a conversa: {e}")
        return None

def export_conversation_json(conversation):
    """Exporta a conversa em formato JSON."""
    try:
        filename = f"conversa_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        with open(filename, "w", encoding='utf-8') as f:
            json.dump(conversation, f, ensure_ascii=False, indent=2)
        return filename
    except Exception as e:
        st.error(f"Erro ao exportar a conversa: {e}")
        return None

def count_tokens_in_conversation(conversation):
    """Estima a quantidade de tokens na conversa atual."""
    # Estimativa simples: aproximadamente 4 caracteres = 1 token
    total_chars = sum(len(entry.get('content', '')) for entry in conversation)
    return total_chars // 4

# Interface Streamlit
st.title("House MD PhD üß†")
st.caption("Powered by PIRM - Diagn√≥sticos M√©dicos Avan√ßados com IA")

# Aviso m√©dico importante
st.error("""
**AVISO M√âDICO CR√çTICO**: Este sistema utiliza IA para fins educacionais e de apoio diagn√≥stico.
N√ÉO substitui consulta m√©dica profissional. Sempre procure um m√©dico qualificado para diagn√≥sticos e tratamentos reais.
Em emerg√™ncias, procure imediatamente o servi√ßo de urg√™ncia mais pr√≥ximo.
""")

# Inicializa√ß√£o do estado da sess√£o
if "conversation" not in st.session_state:
    st.session_state.conversation = []
if "extended_thinking_mode" not in st.session_state:
    st.session_state.extended_thinking_mode = False

# Sidebar
with st.sidebar:
    st.title("‚öôÔ∏è Configura√ß√µes")
    
    # Informa√ß√µes do sistema
    api_status = '‚úÖ Configurada' if os.getenv('ANTHROPIC_API_KEY') else '‚ùå N√£o configurada'
    st.info(f"""
**Modelo:** Claude 4 Sonnet (20250514)
**Contexto:** 400K tokens
**Especialidades:** Racioc√≠nio avan√ßado, medicina baseada em evid√™ncias
**Status API:** {api_status}
    """)
    
    st.divider()
    
    # M√©tricas da sess√£o
    if st.session_state.conversation:
        total_messages = len(st.session_state.conversation)
        user_messages = len([msg for msg in st.session_state.conversation if msg["role"] == "user"])
        token_estimate = count_tokens_in_conversation(st.session_state.conversation)
        
        st.metric("üìä Casos analisados", user_messages)
        st.metric("üí¨ Total de mensagens", total_messages)
        st.metric("üî¢ Tokens estimados", f"{token_estimate:,}")
        
        # Aviso de limite de contexto
        if token_estimate > CONTEXT_WINDOW * 0.7:
            st.warning(f"‚ö†Ô∏è Aproximando-se do limite de contexto ({token_estimate}/{CONTEXT_WINDOW})")
    
    st.divider()
    
    # Modo de pensamento estendido
    st.subheader("üß† Modo de Pensamento")
    st.toggle("Ativar Pensamento Estendido", key="extended_thinking_mode", 
              help="Ativa an√°lise m√©dica aprofundada com racioc√≠nio passo a passo detalhado")
    
    if st.session_state.extended_thinking_mode:
        st.success("‚úÖ Modo de pensamento estendido ativado")
        st.caption("""
        O modo de pensamento estendido realiza uma an√°lise m√©dica aprofundada com:
        - Racioc√≠nio passo a passo expl√≠cito
        - Explora√ß√£o de m√∫ltiplas hip√≥teses
        - Avalia√ß√£o cr√≠tica baseada em evid√™ncias
        - Documenta√ß√£o detalhada do processo diagn√≥stico
        """)
    
    st.divider()
    
    # Op√ß√µes de gerenciamento da conversa
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üóëÔ∏è Limpar Conversa"):
            st.session_state.conversation = []
            st.rerun()
    
    with col2:
        export_format = st.radio("Formato:", ["TXT", "JSON"], horizontal=True)
        if st.button("üíæ Salvar Conversa"):
            if export_format == "TXT":
                if (filename := save_conversation(st.session_state.conversation)):
                    st.success(f"‚úÖ Conversa salva em {filename}")
            else:
                if (filename := export_conversation_json(st.session_state.conversation)):
                    st.success(f"‚úÖ Conversa exportada em {filename}")
    
    st.divider()
    
    # Instru√ß√µes de uso
    with st.expander("üìã Como usar o conhecimento do PIRM"):
        st.markdown("""
### üöÄ **Capacidades do PIRM:**
- **Racioc√≠nio cl√≠nico avan√ßado** com an√°lise de casos complexos
- **Diagn√≥sticos diferenciais** sistem√°ticos e precisos
- **Prescri√ß√µes personalizadas** com dosagens espec√≠ficas
- **Medicina baseada em evid√™ncias** com refer√™ncias cient√≠ficas
- **Pensamento estendido** para an√°lises m√©dicas aprofundadas

### üìù **Como usar:**
1. **Configure sua API Key:** `ANTHROPIC_API_KEY` nas vari√°veis de ambiente
2. **Descreva o caso detalhadamente:**
   - Sintomas (in√≠cio, dura√ß√£o, intensidade)
   - Hist√≥rico m√©dico e familiar
   - Medicamentos em uso
   - Exames realizados
3. **Para an√°lise aprofundada:**
   - Ative o modo de pensamento estendido no painel lateral, ou
   - Digite "pensamento estendido: [sua pergunta]"
4. **Receba an√°lise completa:**
   - Diagn√≥stico prov√°vel
   - Diagn√≥sticos diferenciais
   - Plano terap√™utico
   - Monitoramento recomendado

### ‚ö° **Melhorias do PIRM v5.0:**
- Contexto massivo de 400K tokens
- Respostas detalhadas at√© 200K tokens
- Racioc√≠nio m√©dico passo a passo
- Modo de pensamento estendido
- Melhor compreens√£o de casos complexos

‚ö†Ô∏è **Importante:** Sistema de apoio educacional apenas!
        """)

# Chat
for entry in st.session_state.conversation:
    with st.chat_message(entry["role"]):
        st.markdown(entry["content"])

if prompt := st.chat_input("ü©∫ Descreva o caso cl√≠nico detalhadamente (sintomas, hist√≥rico, medicamentos, exames):"):
    # Detectar se √© uma solicita√ß√£o de pensamento estendido
    is_extended_request, actual_prompt = detect_extended_thinking_request(prompt)
    
    # Determinar se deve usar pensamento estendido
    use_extended_thinking = is_extended_request or st.session_state.extended_thinking_mode
    
    # Adicionar a entrada do usu√°rio √† conversa
    st.session_state.conversation.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)
    
    # Preparar hist√≥rico de conversa para o contexto (excluindo a mensagem atual)
    conversation_history = st.session_state.conversation[:-1] if len(st.session_state.conversation) > 1 else None
    
    # Gerar e exibir resposta
    with st.chat_message("assistant"):
        if use_extended_thinking:
            with st.spinner("üß† Dr. House est√° realizando uma an√°lise aprofundada com pensamento estendido..."):
                response = get_claude_response(
                    actual_prompt, 
                    conversation_history=conversation_history,
                    extended_thinking=True
                )
        else:
            with st.spinner("üî¨ Dr. House est√° analisando o caso com PIRM..."):
                response = get_claude_response(
                    prompt,
                    conversation_history=conversation_history
                )
                
        st.markdown(response)
    
    # Adicionar resposta √† conversa
    st.session_state.conversation.append({"role": "assistant", "content": response})

# Feedback
with st.expander("üí¨ Enviar Feedback"):
    feedback = st.text_area("Seu feedback sobre o diagn√≥stico ou sugest√µes de melhoria:")
    if st.button("üì§ Enviar Feedback"):
        if feedback.strip():
            # Aqui voc√™ pode implementar o salvamento do feedback
            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            try:
                with open("feedback.txt", "a", encoding='utf-8') as f:
                    f.write(f"[{timestamp}] {feedback}\n\n")
                st.success("‚úÖ Obrigado pelo seu feedback! Ele foi salvo para an√°lise.")
            except Exception as e:
                st.error(f"‚ùå Erro ao salvar feedback: {e}")
        else:
            st.warning("‚ö†Ô∏è Por favor, escreva seu feedback antes de enviar.")

# Informa√ß√µes sobre o modo de pensamento estendido
with st.expander("‚ÑπÔ∏è Sobre o Pensamento Estendido"):
    st.markdown("""
    ## üß† Modo de Pensamento Estendido
    
    O modo de pensamento estendido √© uma funcionalidade avan√ßada que permite ao NEXUS-MED ULTRA v5.0 realizar uma an√°lise m√©dica profunda e detalhada, documentando explicitamente cada etapa do racioc√≠nio diagn√≥stico.
    
    ### Como ativar:
    
    1. **Op√ß√£o 1:** Ative o toggle "Pensamento Estendido" no painel lateral
    2. **Op√ß√£o 2:** Digite "pensamento estendido: [sua pergunta]" no chat
    
    ### O que esperar:
    
    - An√°lise m√©dica aprofundada e estruturada
    - Documenta√ß√£o expl√≠cita de cada etapa do racioc√≠nio
    - Considera√ß√£o de m√∫ltiplas hip√≥teses diagn√≥sticas
    - Avalia√ß√£o cr√≠tica baseada em evid√™ncias
    - Justificativas detalhadas para conclus√µes
    - Refer√™ncias a estudos m√©dicos relevantes
    
    ### Quando usar:
    
    - Casos cl√≠nicos complexos ou incomuns
    - Quando precisar entender o racioc√≠nio diagn√≥stico completo
    - Para fins educacionais e de aprendizado
    - Quando desejar uma an√°lise mais abrangente e detalhada
    
    > **Nota:** O modo de pensamento estendido pode resultar em respostas mais longas e detalhadas, mas tamb√©m mais precisas e informativas.
    """)
